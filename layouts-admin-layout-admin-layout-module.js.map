{"version":3,"sources":["webpack:///./src/app/chatboat/chat.service.ts","webpack:///./src/app/chatboat/chatboat.component.css","webpack:///./src/app/chatboat/chatboat.component.html","webpack:///./src/app/chatboat/chatboat.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/layouts/admin-layout/admin-layout.module.ts","webpack:///./src/app/layouts/admin-layout/admin-layout.routing.ts","webpack:///./src/app/user-profile/user-profile.component.css","webpack:///./src/app/user-profile/user-profile.component.html","webpack:///./src/app/user-profile/user-profile.component.ts","webpack:///./src/assets/must-match.validator.ts"],"names":[],"mappings":"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","file":"layouts-admin-layout-admin-layout-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nexport class Message {\n  constructor(public author: string, public content: string) {}\n}\n\n@Injectable()\nexport class ChatService {\n  constructor() {}\n  \n  conversation = new Subject<Message[]>();\n  \n  messageMap = {\n    \"hi\": \"Hello\",\n    \"who are you\": \"My name is Agular Bot\",\n    \"what is angular\": \"Angular is the best framework ever\",\n    \"very bad ui\":\"your message will be not considerd hahahaha\",\n    \"default\": \"I can't understand. Can you please repeat\"\n  }\n\n  getBotAnswer(msg: string) {\n    const userMessage = new Message('user', msg);  \n    this.conversation.next([userMessage]);\n    const botMessage = new Message('bot', this.getBotMessage(msg));\n    \n    setTimeout(()=>{\n      this.conversation.next([botMessage]);\n    }, 1500);\n  }\n\n  getBotMessage(question: string){\n    let answer = this.messageMap[question];\n    return answer || this.messageMap['default'] || this.messageMap['hi'] ||this.messageMap['very bad ui'] || this.messageMap['who are you'] || this.messageMap['what is angular'];\n  }\n}","module.exports = \".message {\\n    border-radius: 50px;\\n    margin: 0 15px 20px;\\n    padding: 10px 20px;\\n    position: relative;\\n    font-size: 20px;\\n  }\\n  .message.to {\\n    background-color:gray;\\n    color: #fff;\\n    margin-left: 100px;\\n    text-align: right;\\n  }\\n  .message.from {\\n    background-color: #E5E4E9;\\n    color: #363636;\\n    margin-right: 100px;\\n  }\\n  .message.to + .message.to,\\n  .message.from + .message.from {\\n    margin-top: -10px;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2hhdGJvYXQvY2hhdGJvYXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLG1CQUFtQjtJQUNuQixtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixlQUFlO0VBQ2pCO0VBQ0E7SUFDRSxxQkFBcUI7SUFDckIsV0FBVztJQUNYLGtCQUFrQjtJQUNsQixpQkFBaUI7RUFDbkI7RUFDQTtJQUNFLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsbUJBQW1CO0VBQ3JCO0VBQ0E7O0lBRUUsaUJBQWlCO0VBQ25CIiwiZmlsZSI6InNyYy9hcHAvY2hhdGJvYXQvY2hhdGJvYXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tZXNzYWdlIHtcbiAgICBib3JkZXItcmFkaXVzOiA1MHB4O1xuICAgIG1hcmdpbjogMCAxNXB4IDIwcHg7XG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gIH1cbiAgLm1lc3NhZ2UudG8ge1xuICAgIGJhY2tncm91bmQtY29sb3I6Z3JheTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBtYXJnaW4tbGVmdDogMTAwcHg7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gIH1cbiAgLm1lc3NhZ2UuZnJvbSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0U1RTRFOTtcbiAgICBjb2xvcjogIzM2MzYzNjtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwMHB4O1xuICB9XG4gIC5tZXNzYWdlLnRvICsgLm1lc3NhZ2UudG8sXG4gIC5tZXNzYWdlLmZyb20gKyAubWVzc2FnZS5mcm9tIHtcbiAgICBtYXJnaW4tdG9wOiAtMTBweDtcbiAgfVxuICAiXX0= */\"","module.exports = \"<div class=\\\"panel-header\\\">\\n  <div class=\\\"header text-center\\\">\\n    <h2 class=\\\"title\\\">ChatBoat</h2>\\n    <p class=\\\"category\\\">Please checkout the\\n      <a href=\\\"\\\" target=\\\"_blank\\\">full documentation.</a>\\n    </p>\\n  </div>\\n</div>\\n<div class=\\\"main-content\\\">\\n  <div class=\\\"row\\\">\\n\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h4 class=\\\"card-title\\\">ChatBoat</h4>\\n          <ng-container *ngFor=\\\"let message of messages\\\">\\n            <div class=\\\"message\\\" [ngClass]=\\\"{ 'from': message.author === 'bot',\\n'to': message.author === 'user' }\\\">\\n              {{ message.content }}\\n            </div>\\n          </ng-container>\\n          <label *ngIf=\\\"messages.length == 0; else dialogInfo\\\" for=\\\"nameField\\\">Your message</label>\\n          <div class=\\\"input-group flex-nowrap\\\">\\n\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"value\\\" (keyup.enter)=\\\"sendMessage()\\\" placeholder=\\\"Enter your message\\\" aria-label=\\\"Username\\\"\\n              aria-describedby=\\\"addon-wrapping\\\">\\n          </div>\\n          <button (click)=\\\"sendMessage()\\\" class=\\\"btn btn-dark\\\">Send</button>\\n          <ng-template #dialogInfo>\\n            <span [className]=\\\"'float-right'\\\">Total messages: {{messages.length}}</span>\\n          </ng-template>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ChatService, Message } from './chat.service';\n@Component({\n  selector: 'app-chatboat',\n  templateUrl: './chatboat.component.html',\n  styleUrls: ['./chatboat.component.css']\n})\nexport class chatboatComponent implements OnInit {\n  messages: Message[] = [];\n  value: string;\n\n  constructor(public chatService: ChatService) { }\n\n  ngOnInit() {\n      this.chatService.conversation.subscribe((val) => {\n      this.messages = this.messages.concat(val);\n    });\n  }\n\n  sendMessage() {\n    this.chatService.getBotAnswer(this.value);\n    this.value = '';\n  }\n\n\n}\n","module.exports = \"ul {\\n    list-style-type: none;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0kscUJBQXFCO0VBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidWwge1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgfSJdfQ== */\"","module.exports = \"\\n<div class=\\\"panel-header panel-header-sm\\\">\\n</div>\\n<div class=\\\"main-content\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h5 class=\\\"title\\\"> Profile</h5>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <div class=\\\"form-group\\\">\\n                <label>First Name</label>\\n                <input type=\\\"text\\\" formControlName=\\\"firstName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\" />\\n                <div *ngIf=\\\"submitted && f.firstName.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f.firstName.errors.required\\\">First Name is required</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label>Last Name</label>\\n                <input type=\\\"text\\\" formControlName=\\\"lastName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\" />\\n                <div *ngIf=\\\"submitted && f.lastName.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f.lastName.errors.required\\\">Last Name is required</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label>Mobile Number</label>\\n                <input type=\\\"number\\\" formControlName=\\\"mobile\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.mobile.errors }\\\" />\\n                <div *ngIf=\\\"submitted && f.mobile.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f.mobile.errors.required\\\">Mobile number is required & must be 10 digit</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label>Email</label>\\n                <input type=\\\"text\\\" formControlName=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\" />\\n                <div *ngIf=\\\"submitted && f.email.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f.email.errors.required\\\">Email is required</div>\\n                    <div *ngIf=\\\"f.email.errors.email\\\">Email must be a valid email address</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label>Password</label>\\n                <input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-control\\\" pattern=\\\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@$!%*?&])[A-Za-z\\\\d@$!%*?&]{8,}$\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\n                <div *ngIf=\\\"submitted && f.password.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n                    <div *ngIf=\\\"f.password.errors.minlength\\\">Password must be at least 6 characters</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label>Confirm Password</label>\\n                <input type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" class=\\\"form-control\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.confirmPassword.errors }\\\" />\\n                <div *ngIf=\\\"submitted && f.confirmPassword.errors\\\" class=\\\"invalid-feedback\\\">\\n                    <div *ngIf=\\\"f.confirmPassword.errors.required\\\">Confirm Password is required</div>\\n                    <div *ngIf=\\\"f.confirmPassword.errors.mustMatch\\\">Passwords must match</div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <button class=\\\"btn btn-dark\\\" >Register</button>\\n            </div>\\n        </form>\\n        </div>\\n      </div>\\n    </div>\\n    \"","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MustMatch } from '../../assets/must-match.validator';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n    registerForm: FormGroup;\n    submitted = false;\n\n\n    constructor(private router: Router, private formBuilder: FormBuilder) {\n\n    }\n\n\n    ngOnInit() {\n        this.registerForm = this.formBuilder.group({\n            firstName: ['', [Validators.required, Validators.minLength(2)]],\n            lastName: ['', [Validators.required, Validators.minLength(2)]],\n            email: ['', [Validators.required, Validators.email]],\n            mobile: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]],\n            password: ['', [Validators.required, Validators.minLength(6)]],\n            confirmPassword: ['', Validators.required]\n        }, {\n                validator: MustMatch('password', 'confirmPassword')\n            });\n    }\n\n\n    get f() { return this.registerForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n\n        if (this.registerForm.invalid) {\n            return;\n        }\n        this.router.navigate(['chatboat']);\n        alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(this.registerForm.value))\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AdminLayoutRoutes } from './admin-layout.routing';\nimport { DashboardComponent } from '../../dashboard/dashboard.component';\nimport { UserProfileComponent } from '../../user-profile/user-profile.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrModule } from 'ngx-toastr';\nimport { chatboatComponent } from '../../chatboat/chatboat.component';\nimport { ChatService } from '../../chatboat/chat.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(AdminLayoutRoutes),\n    FormsModule,\n    NgbModule,    ReactiveFormsModule\n,\n    ToastrModule.forRoot()\n  ],\n  declarations: [\n    DashboardComponent,\n    UserProfileComponent,\n    chatboatComponent,\n  ],\n  providers: [ChatService]\n})\n\nexport class AdminLayoutModule {}\n","import { Routes } from '@angular/router';\n\nimport { DashboardComponent } from '../../dashboard/dashboard.component';\nimport { UserProfileComponent } from '../../user-profile/user-profile.component';\nimport { chatboatComponent } from '../../chatboat/chatboat.component';\n\nexport const AdminLayoutRoutes: Routes = [\n    { path: 'dashboard',      component: DashboardComponent },\n    { path: 'user-profile',   component: UserProfileComponent },\n    { path: 'chatboat',  component: chatboatComponent },\n];\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItcHJvZmlsZS91c2VyLXByb2ZpbGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"panel-header panel-header-sm\\\">\\n</div>\\n<div class=\\\"main-content\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-8\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h5 class=\\\"title\\\"> Profile</h5>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-5 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Company (disabled)</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" disabled=\\\"\\\" placeholder=\\\"Company\\\" value=\\\"EvolutionCo.\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-3 px-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Username</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" value=\\\"Putus@2010\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-4 pl-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"email\\\">Email address</label>\\n                  <input name=\\\"email\\\" id=\\\"email\\\" type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" value=\\\"imangulardev@gmail.com\\\">\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-6 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>First Name</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"First Name\\\" value=\\\"Prashant\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-6 pl-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Last Name</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Last Name\\\" value=\\\"Jha\\\">\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Address</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Home Address\\\" value=\\\"Kempapura , Hebbal\\\">\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-4 pr-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>City</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"City\\\" value=\\\"Bangalore\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-4 px-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Country</label>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Country\\\" value=\\\"India\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"col-md-4 pl-1\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>Postal Code</label>\\n                  <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"ZIP Code\\\" value=\\\"560024\\\">\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label>About Me</label>\\n                  <textarea rows=\\\"4\\\" cols=\\\"80\\\" class=\\\"form-control\\\" placeholder=\\\"Here can be your description\\\">2 years of extensive experience mainly on Angular 5,6,7 , Typescript ,Html,css & Bootstrap.Ability in learning new concepts quickly, working well under pressure and communicating ideas .Adeptness in handling multiple priorities, with a genuine interest in personal and professional development along with ability to work independently with minimum supervision in team environment.</textarea>\\n                </div>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <div class=\\\"card card-user\\\">\\n        <div class=\\\"image\\\">\\n          <img src=\\\"../assets/img/bg5.jpg\\\" alt=\\\"...\\\">\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"author\\\">\\n            <a href=\\\"#\\\">\\n              <img class=\\\"avatar border-gray\\\" src=\\\"../assets/img/prashant.jpg\\\" alt=\\\"...\\\">\\n              <h5 class=\\\"title\\\">Prashant Jha</h5>\\n            </a>\\n            <p class=\\\"description\\\">\\n              imangulardev@gmail.com\\n            </p>\\n          </div>\\n          <p class=\\\"description text-center\\\">\\n            software Developer\\n            <br> I am from Bihar\\n            <br>\\n          </p>\\n        </div>\\n        <br>\\n        <hr>\\n        <div class=\\\"button-container\\\">\\n          <button href=\\\"#\\\" class=\\\"btn btn-neutral btn-icon btn-round btn-lg\\\">\\n            <i class=\\\"fab fa-facebook-f\\\"></i>\\n          </button>\\n          <button href=\\\"#\\\" class=\\\"btn btn-neutral btn-icon btn-round btn-lg\\\">\\n            <i class=\\\"fab fa-twitter\\\"></i>\\n          </button>\\n          <button href=\\\"#\\\" class=\\\"btn btn-neutral btn-icon btn-round btn-lg\\\">\\n            <i class=\\\"fab fa-google-plus-g\\\"></i>\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { FormGroup } from '@angular/forms';\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n            // return if another validator has already found an error on the matchingControl\n            return;\n        }\n\n        // set error on matchingControl if validation fails\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ mustMatch: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n    }\n}\n"],"sourceRoot":""}